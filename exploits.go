package main
import (
	"fmt"
	"strings"
	"time"
	"github.com/gocolly/colly"
)

type Article struct {
	num  int 
}

func main() {
	c := colly.NewCollector()



	c.Limit(&colly.LimitRule{
		DomainGlob: ".*exploit-db.*",
		Delay: 3* time.Second,
	})

	/*grab description for each exploit*/
	c.OnHTML("head", func(e *colly.HTMLElement) {
		tags := e.ChildAttrs("meta[name]", "content")
		descr := strings.Replace(tags[1], ",", "", -1)
		key := strings.Replace(tags[2], ",", "", -1)
		fmt.Println(descr + " " + key + ", ")
	})
	/*grab text for each exploit*/
	c.OnHTML("code", func(e *colly.HTMLElement) {
		code := e.Text
		code = strings.Replace(code, ",", "", -1)
		fmt.Println(code)
		fmt.Println("+++++++++")
	})
	

	c.OnHTML("div.row.mt-3", func(e *colly.HTMLElement) {
		link := e.ChildAttr("a[href]", "href")
		new_link := "https://www.exploit-db.com" + link
		
		c.Visit(e.Request.AbsoluteURL(new_link))
	})

	c.OnError(func(r *colly.Response, err error) {
		fmt.Println("Request URL:", r.Request.URL, "failed with response:", r, "\nError:", err)
	})
	

	c.Visit("https://www.exploit-db.com/exploits/30414")
}
